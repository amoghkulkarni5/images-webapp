from flask import Blueprint, render_template, redirect, url_for, request, flash, current_app
import os
from flask_login import login_required, current_user
from .models import User, Image
from . import db

main = Blueprint('main', __name__)


@main.route('/')
def index():
    return render_template('index.html')


@main.route('/profile')
@login_required
def profile():
    return render_template('profile.html', name=current_user.name, role=current_user.role)


@main.route('/upload', methods=['GET', 'POST'])
@login_required
def upload_file():
    if request.method == 'POST':
        if 'image_file' not in request.files:
            return 'There is no Image in the request.'
        img = request.files['image_file']

        # Store image metadata in database table
        filename = img.filename
        user_image = Image(user_id=current_user.id, name=filename)
        db.session.add(user_image)
        db.session.commit()

        # Create unique path and make directories
        base_path = os.path.join(f"{current_app.config.get('UPLOAD_FOLDER')}/{current_user.name}/{user_image.id}/")
        make_directories(base_path)

        # Perform image transformations and save transformed images (and thumbnail)

        # Save main image
        img.save(base_path + filename)

        # For now it redirects to profile, later it will go to the image's autogenerated transformations
        return render_template('profile.html')

    return render_template('image_form.html')


@main.route('/gallery', methods=['GET'])
@login_required
def view_gallery():
    images_folder = f"{current_app.config.get('UPLOAD_FOLDER')}/{current_user.name}/"
    # Initialize directory if user hasn't uplaoded anything
    make_directories(images_folder)
    return render_template('gallery.html', images_folder=images_folder)


# Image Transformation & other helper Methods
def make_directories(base_path):
    os.makedirs(base_path, exist_ok=True)

# def blur_and_save(initial_image):
#
#
# def shade_and_save(initial_image):
#
#
# def spread_and_save(initial_image):
#
